redis windows端安装使用
https://blog.csdn.net/qq_24718237/article/details/79147025
https://blog.csdn.net/weixin_33446857/article/details/77893896
直接双击解压包下redis-server.exe启动服务 双击redis-cli启动客户端
java中强软弱虚引用
https://blog.csdn.net/weixin_38810239/article/details/79548942

MyBatis缓存
    一级缓存默认启动，存在于SQLSession的生命周期中，Mybatis会把执行的方法和参数通过算法生成缓存的键值，
将键值和查询结果存入一个Map对象中
    flushCache="true"，会在查询数据前清空一级缓存，每次从数据库中获取数据；insert update delete操作
都会清空一级缓存
    在MyBatis的全局配置setting中有一个参数CacheEnabled，这个参数是二级缓存的全局开关，默认值true，二级
缓存是和命名空间绑定的
    当某几个表可以作为一个业务整体时，通常是让几个会关联的表同时使用一个二级缓存，解决脏读数据问题

MapperScannerConfigurer
    Hibernate DaoImpl中由SessionFactory获取Session执行HQL语句，而MyBatis中只用实现一个接口就可以，原因
就在于MapperScannerConfigurer
    http://www.cnblogs.com/fangjian0423/p/spring-mybatis-MapperScannerConfigurer-analysis.html中讲到
MapperScannerConfigurer是Bean后处理器，将每个Mapper变成MapperFactoryBean，FactoryBean并不会返回FactoryBean
实例而是返回FactoryBean的产品，当在ServiceImpl中注入Mapper，此时注入的是经过JDK动态代理生成的MapperProxy,
调用其方法内部是调用SqlSession.XXX(id), id是由接口全限定名称和调用的方法组成的一个Id
    参考：轻量级Java 第七章
         从入门到精通MyBatis 2.8节

MyHabits插件学习
    接触过分页插件（物理分页可以返回总数），下划线转驼峰插件，了解下插件实现原理
    由https://blog.csdn.net/ykzhen2015/article/details/50315027中知道SqlSession底层离不开Executor
StatementHandler ParameterHandler ResultHandler，而插件也就是Interceptor接口的实现拦截器就是拦截上面
四个接口中的方法
    例如SqlSession.selectList内部是调用Executor，而Executor是通过jdk动态代理得到的，那么就可以在原来的
执行方法前后加入拦截的方法。Executor由Interceptor的plugin方法返回，plugin方法内调用Proxy.newProxyInstance,
其中第三个参数传入Interceptor这样就可以在invoke中调用intercept方法

Mybatis二级缓存useCache=true这个查询sql的结果进行缓存，其余insert update delete可以flushCache=true会把
redis中该mapper下的二级缓存清除
https://www.jianshu.com/p/52b0805f1950
这些key保存在redis的list结构，以id作为list的key，每个mapper接口产生的id不变
https://www.jianshu.com/p/1d0be9bf3f80


2018.10.25
redis 常用命令
set key value
get key
redis-server.exe redis.conf or 双击redis-server.exe启动服务
redis-cli.exe -h localhost -p 6379 or 双击redis-cli.exe启动客户端
config get requirepass
config set requirepass "pass" 重启失效在配置文件中更改
设置密码启动客户端 redis-cli.exe -h localhost -p 6379 -a pass
查看所有键 keys *
查看键数量 dbsize
切换数据库 select index
清空当前数据库 flushdb
清空所有数据库 flushall

redis.properties设置参照
https://yq.aliyun.com/articles/236383?spm=a2c4e.11153959.blogcont531067.14.64f445b52u5nWH
redisTemplate 参数设置
https://blog.csdn.net/whatlookingfor/article/details/51862969


@CachePut不去检查缓存中是否存在，直接去数据库中取并放入缓存中
<cache:annotation-driven cache-manager="cacheManager" />
mode属性可选值由proxy和aspectj，默认是proxy，当mode为proxy时，只有缓存方法在外部调用时Spring Cache
才会发生作用，并且只有Public方法上标注@Cacheable等标注才会起作用，当mode为aspectj时不存在上面两个问题
proxy-target-class属性表示是否代理class，默认是false，@Cacheable等可以标注在接口方法上，这对于基于
接口代理没有问题，当proxy-target-class为true或mode为aspectj时是基于class进行操作的，定义在接口上的注解
不会识别的
https://www.cnblogs.com/fashflying/p/6908028.html

